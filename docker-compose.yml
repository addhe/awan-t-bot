version: '3.8'

services:
  # Redis service with persistence
  redis:
    image: redis:6.2
    container_name: trading-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-StrongRedisPassword}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-StrongRedisPassword}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trading-network

  # PostgreSQL service for long-term storage
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: trading-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-tradingdb}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trading-network

  # Trading bot service
  trading-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: awan-trading-bot
    depends_on:
      - redis
      - postgres
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-StrongRedisPassword}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-tradingdb}
      - TZ=Asia/Jakarta
    volumes:
      - ./logs:/app/logs
      - ./status:/app/status
      - ./config:/app/config
    restart: unless-stopped
    networks:
      - trading-network

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  trading-network:
    driver: bridge
